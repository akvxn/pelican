'use strict';

var assert = require('./assert.cjs');

// Browsers don't have `process`
// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
const getEnv = (key, fallback = '') => process?.env[key] ?? fallback;
const getEnvAsStringArray = (envKey, fallback = []) => {
    const rawValue = getEnv(envKey);
    if (!rawValue) {
        return fallback;
    }
    return rawValue
        .split(',')
        .map((value) => value.trim())
        .filter(Boolean);
};
const assertEnv = (key) => {
    // Browsers don't have `process`
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    const value = process?.env[key];
    assert.assert(value, new Error(`env variable ${key} not found`));
    return value;
};
const isNode = () => typeof window === 'undefined';

exports.assertEnv = assertEnv;
exports.getEnv = getEnv;
exports.getEnvAsStringArray = getEnvAsStringArray;
exports.isNode = isNode;
