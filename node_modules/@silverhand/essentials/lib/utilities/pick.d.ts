import type { Picked, PlainObject } from './types.js';
export declare const pick: <T, Keys extends (keyof T)[]>(object: T, ...keys: Keys) => { [key in Keys[number]]: T[key]; };
export declare const pickState: <T extends PlainObject, Keys extends (keyof T)[]>(...keys: Keys) => (state: T) => Picked<T, Keys>;
