// eslint-disable-next-line @typescript-eslint/ban-types
const isObject = (object) => object !== null && typeof object === 'object';
const isKeyInObject = (object, key
// eslint-disable-next-line @typescript-eslint/ban-types
) => isObject(object) && key in object;
/**
 * Remove all keys with `undefined` values from an object. This function only
 * performs a shallow removal, i.e. it does not remove `undefined` values nested
 * in objects.
 *
 * @param object The object to remove `undefined` keys from.
 * @returns A new object with all `undefined` keys removed.
 */
// eslint-disable-next-line @typescript-eslint/ban-types -- this is a utility function
const removeUndefinedKeys = (object) => 
// eslint-disable-next-line no-restricted-syntax
Object.fromEntries(Object.entries(object).filter(([, value]) => value !== undefined));

export { isKeyInObject, isObject, removeUndefinedKeys };
