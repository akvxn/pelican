import type { LogtoConfig } from '@logto/client';
import BaseClient from '@logto/client';
export { createRequester, default as BaseClient } from '@logto/client';
export { generateCodeChallenge, generateCodeVerifier, generateState } from './utils/generators.js';
export type { AccessTokenClaims, IdTokenClaims, LogtoErrorCode, LogtoConfig, LogtoClientErrorCode, UserInfoResponse, InteractionMode, ClientAdapter, SignInOptions, Storage, } from '@logto/client';
export { LogtoError, LogtoRequestError, LogtoClientError, OidcError, Prompt, ReservedScope, ReservedResource, UserScope, organizationUrnPrefix, buildOrganizationUrn, getOrganizationIdFromUrn, PersistKey, isLogtoRequestError, } from '@logto/client';
export { BrowserStorage } from './storage.js';
export default class LogtoClient extends BaseClient {
    /**
     * @param config The configuration object for the client.
     * @param [unstable_enableCache=false] Whether to enable cache for well-known data.
     * Use sessionStorage by default.
     */
    constructor(config: LogtoConfig, unstable_enableCache?: boolean);
}
