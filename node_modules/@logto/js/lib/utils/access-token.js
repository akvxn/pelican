import { urlSafeBase64 } from '@silverhand/essentials';
import { isArbitraryObject } from './arbitrary-object.js';

// https://docs.logto.io/docs/recipes/protect-your-api/
function assertAccessTokenClaims(data) {
    if (!isArbitraryObject(data)) {
        throw new TypeError('AccessToken is expected to be an object');
    }
    for (const key of ['jti', 'iss', 'sub', 'aud', 'client_id', 'scope']) {
        if (data[key] === undefined) {
            continue;
        }
        if (typeof data[key] !== 'string' && data[key] !== null) {
            throw new TypeError(`At path: AccessToken.${key}: expected null or a string`);
        }
    }
    for (const key of ['exp', 'iat']) {
        if (data[key] === undefined) {
            continue;
        }
        if (typeof data[key] !== 'number' && data[key] !== null) {
            throw new TypeError(`At path: AccessToken.${key}: expected null or a number`);
        }
    }
}
const decodeAccessToken = (accessToken) => {
    const { 1: encodedPayload } = accessToken.split('.');
    if (!encodedPayload) {
        // Non-JWT format token string
        return {};
    }
    const json = urlSafeBase64.decode(encodedPayload);
    const accessTokenClaims = JSON.parse(json);
    assertAccessTokenClaims(accessTokenClaims);
    return accessTokenClaims;
};

export { decodeAccessToken };
